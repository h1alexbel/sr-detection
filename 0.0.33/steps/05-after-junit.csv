repo,branch,readme,releases,open_issues,branches,license,workflows,pulls,w_jobs,w_oss,w_steps,has_release_workflow,w_simplicity,tests
arconia-io/arconia,main,"# Arconia

Arconia is a framework to build SaaS, multitenant applications using Java and Spring Boot.

<img src=""arconia-logo.png"" alt=""The Arconia logo"" height=""250px"" />

## 🚀&nbsp; Quick Start

### Pre-Requisites

* Java 21+
* [Spring CLI](https://docs.spring.io/spring-cli/reference/installation.html)

### Getting Started

Using the Spring CLI, you can easily bootstrap a new Spring Boot application using the Arconia framework.

First, add the Arconia Spring catalog providing the project templates.

```shell
spring project-catalog add arconia https://github.com/arconia-io/arconia
```

Then, create a new Spring Boot project for building a multitenant web application.

```shell
spring boot new myapp arconia-web
```

Finally, navigate to the `myapp` folder and run the Spring Boot application.

```shell
cd myapp
./mvnw spring-boot:run
```

You can now call the application as one of the valid tenants (`dukes` or `beans`).
This example uses [httpie](https://httpie.io) to send HTTP requests.

```shell
http :8080/ X-TenantId:dukes
```

## 🌟 Examples

Check these [examples](https://github.com/arconia-io/arconia-samples) to see Arconia and Spring Boot in action.

## 🛡️&nbsp; Security

The security process for reporting vulnerabilities is described in [SECURITY.md](SECURITY.md).

## 🖊️&nbsp; License

This project is licensed under the **Apache License 2.0**. See [LICENSE](LICENSE) for more information.
",5,9,1,Apache-2.0,1,0.0,1.0,1.0,7.0,0.0,-1.4,0.0
linux-china/sieve-cache,main,"SIEVE Cache in Java
===================

SIEVE is simpler than LRU with following features:

* Simplicity: easy to implement and can be easily integrated into existing systems.
* Efficiency: achieves state-of-the-art efficiency on skewed workloads.
* Cache Primitive: facilitates the design of advanced eviction algorithms.

![How it works](how-it-works.png)

# Get started
 
* Add dependency to `pom.xml`:

```xml
<dependency>
    <groupId>org.mvnsearch</groupId>
    <artifactId>sieve-cache</artifactId>
    <version>0.1.0</version>
</dependency>
```
* Create a cache instance and use it:

```
   Cache<String> cache = new SieveCache<>();
   cache.put(""nick"", ""Jackie"");
   System.out.println(cache.get(""nick""));
```

# References
        
* SIEVE: https://cachemon.github.io/SIEVE-website/
* SIEVE is simpler than LRU: https://cachemon.github.io/SIEVE-website/blog/2023/12/17/sieve-is-simpler-than-lru/",1,1,1,Apache-2.0,0,0.0,0.0,0.0,0.0,0.0,1.0,3.0
CleanroomMC/Fugue,master,"# Fugue
Fix dead mods. [Explain](https://www.etymonline.com/cn/word/fugue)

Also check [The Fugue Plane](https://forgottenrealms.fandom.com/wiki/Fugue_Plane).

## Download
https://github.com/CleanroomMC/Fugue/releases/latest

If you are still using 0.1.0 Cleanroom, use 0.5.4. But that's not recommended.

## List
* Charset
* CodeChickenLib
* Custom Main Menu
* Hammer Lib
* Forge Multipart
* Project:Red
* Solar Flux Reborn
* Xaero Plus
* EnderCore
* Lag Goggles
* Snow! Real Magic
* Botania Tweaks
* Advanced Rocketry
* Entity Distance
* FoamFix
* Shoulder Surfing Reloaded
* SplashAnimation
* Logistics Pipes
* OpenDisks
* OpenSecurity
* Enchantments Control
* GregTech CE Unofficial (Before 2.8.8)
* TFC Medicinal
* Mcjty Core
* LoliASM
* Howling Moon
* Custom NPCs
* XNet
* ZeroCore (ExtremeReactor)
* Smooth Font
* Water Power
* Survival Inc.
* Subauqatic (Temporary)
* Nothirium
* IC2C Extra
* Simply Hot Spring
* OpenModsLib
* Valkyrie (Temporary)
* ReplayMod
* Thaumic Speedup (Temporary)
* Astral Sorcery
* Armourer's Workshop
* Vampirism
* MAGE (Graphical Tweaks)
* Extra Utilities 2
* In Control!
* More Refined Storage
* Better Formatting Code
* 5zig
* Ears
* Colytra
* Crossbow
* Polyfrost mods
* Carry On
* Litematica
* Better Records
* Aqua Acrobatics
* Refined Relocation 2
* Integrated Proxy
* Thaumic Fixes
* Erebus Fix
* Uncrafting Blacklist
* Unilib

## Note
Add + to start of the file if it's not there.",62,4,1,GPL-3.0,2,12.0,2.0,1.0,12.0,1.0,-3.3,0.0
xyzeva/ender-relay,main,"
<div align=""center"">

  <img width=""384"" height=""384"" src=""https://github.com/xyzeva/ender-relay/assets/133499694/0a9b6ff3-a7bd-42ba-ba3c-0845913f9917""></img>
  <h1>The Ender Relay</h1>
  <div>
    <a href=""https://modrinth.com/mod/end-relay""><img alt=""modrinth"" height=""56"" src=""https://cdn.jsdelivr.net/npm/@intergrav/devins-badges@3/assets/cozy/available/modrinth_vector.svg""></a>
    <a href=""https://modrinth.com/mod/fabric-api""><img alt=""fabric-api"" height=""56"" src=""https://cdn.jsdelivr.net/npm/@intergrav/devins-badges@3/assets/cozy/requires/fabric-api_vector.svg""></a>
<a href=""https://buymeacoffee.com/xyzeva""><img alt=""buymeacoffee-singular"" height=""56"" src=""https://cdn.jsdelivr.net/npm/@intergrav/devins-badges@3/assets/cozy/donate/buymeacoffee-singular_vector.svg""></a>
  </div>
</div>

This is a one-to-one replica of the [ender relay concept](https://www.youtube.com/watch?v=L1i4izl25V4) a youtuber by the name of Kenadian made.

The resources for the block were provided by Kenadian.

The Ender Relay is a block that can only be used in the end, it is crafted with a lodestone compass and can be charged like a respawn anchor, instead with a end crystal. When a player clicks the block, it teleports to the lodestone compasses location, ontop of the lodestone.

This completes the trilogy of the bed, respawn anchor by introducing a transportation item for the end dimension.

For more on the concept (and the mod, since its a 1:1), watch the video linked above!
",3,2,1,MIT,1,0.0,1.0,1.0,4.0,0.0,-0.65,0.0
dnwwdwd/homieMatching,release_2.0,"# homie 匹配系统

> 作者：C1own
>
> [Github 主页](https://github.com/dnwwdwd)
>
> [CSDN 主页](https://blog.csdn.net/xyendjsj?type=blog)

![](https://hejiajun-img-bucket.oss-cn-wuhan-lr.aliyuncs.com/img/20240609142339.png)



## 项目介绍

homie 匹配系统是一个移动端网页的在线云交友平台。实现了按标签匹配、查找用户，基于 Redis GEO 实现搜索附近用户，同时个人还可以建队、组队以打造个人学习队伍。除了添加好友、搜索好友外，还基于 Websocket 实现好友间私聊，方便用户寻找志同道合的学习搭子。

### 线上地址

[厚米匹配系统](http://hm.hejiajun.icu/)

### 前端地址

[homie 匹配前端地址](https://github.com/dnwwdwd/homieMatching-fronted)

### 后端地址

[homie 匹配后端地址](https://github.com/dnwwdwd/homieMatching)

### 项目部署教程

[homie 匹配部署教程](https://blog.csdn.net/xyendjsj/article/details/135921460?spm=1001.2014.3001.5501)



## 技术选型

### 前端

| 技术       | 用途                       | 版本   |
| ---------- | -------------------------- | ------ |
| Vue        | 前端经典框架，方便开发页面 | 3.3.11 |
| Vue-Router | 细致的导航控制             | 4      |
| Axios      | 发送请求至后端             | 1.6.2  |
| Vant       | 移动端样式组件库           | 4.8.0  |
| Vite       | 前端构建工具               | 5.0.8  |



### 后端

| 技术                 | 用途                                         | 版本    |
| -------------------- | -------------------------------------------- | ------- |
| Spring Boot          | 快构建 Spring 应用                           | 2.7.6   |
| JDK                  | Java 应用开发工具                            | 1.8     |
| MyBatis              | 操作数据库的框架                             | 3.5.2   |
| MyBatis-Plus         | MyBatis的增强框架，无需编写 SQL 语句         | 3.5.2   |
| MySQL                | 一个关系型数据库产品，用于存储数据           | 8.0..33 |
| Redis                | 一个非关系型数据库产品，用于存储数据         | 5.      |
| WebSocket            | 使得客户端和服务器之间的数据交换变得更加简单 | 2.4.1   |
| Lombok               | 实体类方法的快速生成工具                     |         |
| knife4j              | 在线接口文档生成的库                         | 2.0.9   |
| EasyExcel            | 快速、低占用地操作 Excel                     | 3.3.2   |
| hutool               | 强而全的工具库                               | 5.7.17  |
| Guava-Retrying       | 提供重试机制的库                             | 1.0.6   |
| Apache-commons-lang3 | 工具库                                       | 3.12.0  |



## 个人介绍

一个普通学校的大三学生，即将大四毕业了，正在做毕设。

<img src=""https://hejiajun-img-bucket.oss-cn-wuhan-lr.aliyuncs.com/img/20240609142050.jpg"" alt=""597f123b20d2e350ad2916f61c377ef"" style=""zoom: 33%;"" />

> 觉得项目还不错的同学可否给我项目点个 Star 呢？如果可以，小弟不胜感激，谢谢！

## 功能展示

登录

<img src=""https://hejiajun-img-bucket.oss-cn-wuhan-lr.aliyuncs.com/img/20240609143001.png"" alt=""image-20240609143001885"" style=""zoom: 67%;"" />

注册

<img src=""https://hejiajun-img-bucket.oss-cn-wuhan-lr.aliyuncs.com/img/20240609142952.png"" alt=""image-20240609142952622"" style=""zoom: 67%;"" />

<img src=""https://hejiajun-img-bucket.oss-cn-wuhan-lr.aliyuncs.com/img/20240609143117.png"" alt=""image-20240609143117032"" style=""zoom: 67%;"" />

首页

<img src=""https://hejiajun-img-bucket.oss-cn-wuhan-lr.aliyuncs.com/img/20240609145323.png"" alt=""image-20240609145323203"" style=""zoom:67%;"" />

按标签匹配相似用户

<img src=""https://hejiajun-img-bucket.oss-cn-wuhan-lr.aliyuncs.com/img/20240609145335.png"" alt=""image-20240609145335696"" style=""zoom:67%;"" />

按标签搜索用户

<img src=""https://hejiajun-img-bucket.oss-cn-wuhan-lr.aliyuncs.com/img/20240609145012.png"" alt=""image-20240609145012357"" style=""zoom:67%;"" />

<img src=""https://hejiajun-img-bucket.oss-cn-wuhan-lr.aliyuncs.com/img/20240609145002.png"" alt=""image-20240609145002577"" style=""zoom:67%;"" />

按距离搜索用户

<img src=""https://hejiajun-img-bucket.oss-cn-wuhan-lr.aliyuncs.com/img/20240609145122.png"" alt=""image-20240609145122634"" style=""zoom:67%;"" />

好友页面

<img src=""https://hejiajun-img-bucket.oss-cn-wuhan-lr.aliyuncs.com/img/20240609145434.png"" alt=""image-20240609145434695"" style=""zoom:67%;"" />

搜索好友

<img src=""https://hejiajun-img-bucket.oss-cn-wuhan-lr.aliyuncs.com/img/20240609171231.png"" alt=""image-20240609171231079"" style=""zoom:67%;"" />

好友私聊

<img src=""https://hejiajun-img-bucket.oss-cn-wuhan-lr.aliyuncs.com/img/20240609145534.png"" alt=""image-20240609145534153"" style=""zoom:67%;"" />

建队

<img src=""https://hejiajun-img-bucket.oss-cn-wuhan-lr.aliyuncs.com/img/20240609145549.png"" alt=""image-20240609145549455"" style=""zoom:67%;"" />

个人页面

<img src=""https://hejiajun-img-bucket.oss-cn-wuhan-lr.aliyuncs.com/img/20240609143327.png"" alt=""image-20240609143327588"" style=""zoom: 67%;"" />



<img src=""https://hejiajun-img-bucket.oss-cn-wuhan-lr.aliyuncs.com/img/20240609143357.png"" alt=""image-20240609143357705"" style=""zoom:67%;"" />



## 项目亮点

1. 基于 Spring AOP + Axios 实现前端登录拦截
2. 基于 Redis 实现分布式 Session 存储
3. 使用 Redis List 结构配合 Vue-infinite-loading 组件实现滑动加载
4. Spring Scheduling + Redis 分布式锁实现缓存预热
5. 了解编辑距离算法，可用于匹配相似字符串，单词校验
6. 基于 Redis GEO 存储用户地理微信信息，实现搜索附近用户
7. 基于 Redis 分布式锁防止用户重复入队
8. 通过 Guava 库实现重试机制，保证缓存数据一致性
9. 基于 Websocket 实现用户间私聊
10. 集成第三方库生成接口测试文档，方便测试项目接口
11. 熟悉 EasyExcel 的使用
12. 基于 Axios 封装请求实例，方便请求后端接口
13. 熟悉 Vant 组件库的使用
14. 熟悉 Vue3 setup 语法
15. 掌握 Vue-Router 基本使用



## 数据库表

> 如果大家拉取了后端源码，直接找到 sql/create_sql.sql 文件直接运行即可创建相应数据库和表结构

### 用户表

```sql
/*用户表*/
create table hjj.user
(
    id           bigint auto_increment comment 'id'
        primary key,
    username     varchar(256)                       null comment '用户昵称',
    userAccount  varchar(256)                       null comment '账户',
    avatarUrl    varchar(1024)                      null comment '用户头像' default 'https://www.keaitupian.cn/cjpic/frombd/0/253/936677050/470164789.jpg',
    gender       tinyint                            null comment '用户性别',
    profile      varchar(512)                       null comment '个人简介',
    userPassword varchar(512)                       not null comment '用户密码',
    phone        varchar(128)                       null comment '电话',
    email        varchar(512)                       null comment '邮箱',
    userStatus   int      default 0                 not null comment '状态 0 - 正常',
    createTime   datetime default CURRENT_TIMESTAMP null comment '创建时间',
    updateTime   datetime default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP comment '更新时间',
    isDelete     tinyint  default 0                 not null comment '是否删除',
    userRole     int      default 0                 not null comment '用户角色 0 - 普通用户 1 - 管理员',
    planetCode   varchar(512)                       null comment '星球编号',
    tags         varchar(1024)                      null comment '标签列表(json)',
    longitude    decimal(10, 6)                     null comment '经度',
    dimension    decimal(10, 6)                     null comment '纬度'
)
    comment '用户';
```



### 队伍表

```sql
/*队伍表*/
create table if not exists hjj.team
(
    id           bigint auto_increment comment 'id'
        primary key,
    teamName   		varchar(256)                        not null comment '队伍名称',
    description 	varchar(1024)                       null comment ' 描述',
    maxNum        	int    default 1              		null comment '最大人数',
    expireTime      datetime							null comment '过期时间',
    userId 			bigint                              not null comment '队伍创建者/队长id',
    status         	tinyint default 0 		        	null comment '队伍状态 - 0 - 公开， 1 - 私有，2 - 加密
- ',
    password        varchar(512)                       null comment '队伍密码',
    createTime   	datetime default CURRENT_TIMESTAMP null comment '创建时间',
    updateTime   	datetime default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP comment '更新时间',
    isDelete     	tinyint  default 0                 not null comment '是否删除'
)
    comment '队伍信息';
```



### 用户关系表

```sql
/*用户队伍关系*/
create table if not exists hjj.user_team
(
    id           bigint auto_increment comment 'id'
        primary key,
    userId 			bigint                             	comment '用户id',
    teamId 			bigint                             	comment '队伍id',
    joinTime   	datetime 							    comment '加入时间',
    createTime   	datetime default CURRENT_TIMESTAMP null comment '创建时间',
    updateTime   	datetime default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP comment '更新时间',
    isDelete     	tinyint  default 0                 not null comment '是否删除'
)
    comment '用户队伍关系表';
```



### 好友表

```sql
/*好友表*/
create table hjj.friend
(
    id         bigint auto_increment comment 'id'
        primary key,
    userId     bigint                             not null comment '用户id（即自己id）',
    friendId   bigint                             not null comment '好友id',
    createTime datetime default CURRENT_TIMESTAMP null comment '创建时间',
    updateTime datetime default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP comment '更新时间',
    isDelete   tinyint  default 0                 not null comment '是否删除'
)
    comment '好友表';
```



### 聊天表

```sql
/*聊天表*/
CREATE TABLE `chat`  (
                         `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '聊天记录id',
                         `fromId` bigint(20) NOT NULL COMMENT '发送消息id',
                         `toId` bigint(20) NULL DEFAULT NULL COMMENT '接收消息id',
                         `text` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL,
                         `chatType` tinyint(4) NOT NULL COMMENT '聊天类型 1-私聊 2-群聊',
                         `createTime` datetime NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
                         `updateTime` datetime NULL DEFAULT CURRENT_TIMESTAMP,
                         `teamId` bigint(20) NULL DEFAULT NULL,
                         `isDelete` tinyint(4) NULL DEFAULT 0,
                         PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '聊天消息表' ROW_FORMAT = COMPACT;
```



## 项目初始化

### 前端

基础环境

- 软件：WebStorm 2022.2.5 / Vscode
- 环境：Node 版本：18.0.2

1）拉取项目

```bash
git clone https://github.com/dnwwdwd/homeiMatching-frontend.git
```

2）安装依赖

```bash
npm install
```

3）运行项目

```bash
npm run dev
```

4）打包项目

```bash
npm run build
```



### 数据库

1）对于拉去后端项目的同学直接运行 /sql/create_sql.ql 文件即可，前提电脑装了 MySQL（5.7 或 8.x 都可）

2）完事后将 application.yml 文件中数据库的账号密码改为自己的即可，对了此项目还用了 Redis，所以还要修改 Redis 的连接配置，有密码的加上密码

```yml
spring:
  profiles:
    active: dev
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  application:
    name: homieMatching
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/hjj?characterEncoding=UTF-8
    username: root
    password: 123456
  session:
    timeout: 86400
    store-type: redis
  redis:
    port: 6379
    host: localhost
    database: 0
server:
  port: 8080
  servlet:
    context-path: /api
    session:
      cookie:
        domain: localhost
        same-site: none
        secure: true
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false
  global-config:
    db-config:
      logic-delete-field: isDelete
      logic-delete-value: 1
      logic-not-delete-value: 0
```



### 后端

基础环境

- 软件：IDEA 2023.1.6
- JDK 1.8 + MySQL 8.0.33 + Redis 5.x（最好是 5.x 以上） + Spring Boot 2.7.6 

> 更细的环境请看上面的技术选型，上面有具体的依赖关系和版本。
>
> **各位一定要注意在启动后端前，一定要先建好数据库表和安装 Redis，改好 yml 文件的连接信息再启动后端。**

1）拉取项目

```bash
git clone https://github.com/dnwwdwd/homieMatching.git
```

2）点击小圆圈重新加载所有 Maven 项目 ，下载依赖。

![image-20240609154936738](https://hejiajun-img-bucket.oss-cn-wuhan-lr.aliyuncs.com/img/20240609154936.png)

3）启动后端

找到 HomieMatchingApplication 主类，点击运行即可。

![image-20240609154419326](https://hejiajun-img-bucket.oss-cn-wuhan-lr.aliyuncs.com/img/20240609154419.png)



## 项目部署

[homie 匹配部署教程](https://blog.csdn.net/xyendjsj/article/details/135921460?spm=1001.2014.3001.5501)

跟着上面的教程一步一步来即可，不行你不会，如果中间有任何问题欢迎在这个网站，或者 CSDN 上，亦或者是微信上向我提问。觉得项目还不错的话，请给我点个 Star 呗，谢谢！
",0,2,2,,0,2.0,0.0,0.0,0.0,0.0,1.0,11.0
MirnaGama/hospital-management-api,master,"# Hospital Management - API Module ![Build Status](https://github.com/MirnaGama/hospital-management-api/actions/workflows/maven.yml/badge.svg)

## About the project
Hospital Management API built in Spring Boot

### Prerequisites:
- Spring Boot 3.2.1 
- JDK 17
- Maven 4.0.0

### Running the application
1. `git clone https://github.com/MirnaGama/hospital-management-api/`
2. `cd hospital-management-api`
3. `mvn clean install`<br>
It will build the jar file in the target folder
4. `mvn spring-boot:run`<br>
It will compile and run the application on default port (8080)

### Running tests
- `mvn test`<br>
It will executes all the tests.

- `mvn -Dtest=packageName.className test`<br>
It will execute only one test class

- `mvn -Dtest=packageName.className#methodName test`<br>
It will run only one test method from one test class

### Features - v1.0
- [X] R1 - Doctor Registration
- [X] R2 - List of Doctors
- [X] R3 - Doctor Update
- [X] R4 - Doctor Exclusion
- [X] R5 - Patient Registration
- [X] R6 - List of Patients
- [X] R7 - Patient Update
- [X] R8 - Patient Exclusion
- [X] R9 - Consultation Scheduling
- [X] R10 - Consultation Cancellation

## API Documentation - /swagger-ui/index.html

### authentication

#### POST - [**/api/auth/register**] - Register a new user

- **Body:**
```
{   
    ""login"" (string, required),  
    ""password"" (string, required), 
}
```

- **Responses:**

| Code  | Description |
| ------------- | ------------- |
| `200` | _Successful operation_ |
| `400` | _Validation Error_ |

#### POST - [**/api/auth/login**] - Perform the login

- **Body:**
```
{   
    ""login"" (string, required),  
    ""password"" (string, required), 
}
```

- **Responses:**

| Code  | Description |
| ------------- | ------------- |
| `200` | _Successful operation_ |
| `400` | _Validation Error_ |
| `403` | _Incorrect credentials_ | 


### doctors

#### POST - [**/api/v1.0/doctors**] - Adds a new doctor

- **Body:**
```
{   
    ""name"" (string, required),  
    ""email"" (string, required),  
    ""crm"" (string, required),  
    ""telephone"" (string, required), 
    ""specialty"" (string, required), 
    ""address"": {   
        ""street"" (string, required),
        ""neighborhood"" (string, required), 
        ""zipCode"" (string, required),  
        ""city"" (string, required),  
        ""state"" (string, required),
        ""additionalDetails"" (string, optional),  
        ""houseNumber"" (string, optional)
    } 
}
```

- **Request Headers:**

| Key  | Description |
| ------------- | ------------- |
| `Authorization` | _Authorization token_ |

- **Responses:**

| Code  | Description |
| ------------- | ------------- |
| `201` | _Successfully created_ |
| `400` | _Validation Error_ |
| `403` | _Unauthorized / Invalid token_ | 

#### GET - [**/api/v1.0/doctors/{id}**] - Get an existing doctor

- **Response Body Example:**
```
{
    ""id"": 1,
    ""name"": ""DOCTOR TEST"",
    ""email"": ""test@gmail.com"",
    ""crm"": ""12456"",
    ""telephone"": ""(81) 99999999"",
    ""specialty"": ""ORTHOPEDICS"",
    ""active"": true,
    ""address"": {
        ""street"": ""TEST STR."",
        ""neighborhood"": ""TEST NEIGHBORHOOD"",
        ""zipCode"": ""12345678"",
        ""city"": ""TEST CITY"",
        ""state"": ""ST"",
        ""additionalDetails"": null,
        ""houseNumber"": null
    }
}
```

- **Request Headers:**

| Key  | Description |
| ------------- | ------------- |
| `Authorization` | _Authorization token_ |

- **Request Parameters:**

| Key  | Description |
| ------------- | ------------- |
| `id` | _Unique identifier of the doctor who will be fetched_ |

- **Responses:**

| Code  | Description |
| ------------- | ------------- |
| `200` | _Successful operation_ |
| `404` | _Entity not found_ |
| `403` | _Unauthorized / Invalid token_ | 

#### GET - [**/api/v1.0/doctors**] - Get a list of doctors

- **Response Body Example:**
```
{
    ""content"": [
        {
            ""name"": ""Test1"",
            ""email"": ""test1@gmail.com"",
            ""crm"": ""123456"",
            ""specialty"": ""ORTHOPEDICS""
        },
        {
            ""name"": ""Test2"",
            ""email"": ""test2@gmail.com"",
            ""crm"": ""789101"",
            ""specialty"": ""ORTHOPEDICS""
        },
        {
            ""name"": ""Test3"",
            ""email"": ""test3@gmail.com"",
            ""crm"": ""112131"",
            ""specialty"": ""ORTHOPEDICS""
        },
    ],
    ""pageable"": {
        ""pageNumber"": 0,
        ""pageSize"": 10,
        ""sort"": {
            ""sorted"": true,
            ""unsorted"": false,
            ""empty"": false
        },
        ""offset"": 0,
        ""paged"": true,
        ""unpaged"": false
    },
    ""totalPages"": 1,
    ""totalElements"": 3,
    ""last"": true,
    ""sort"": {
        ""sorted"": true,
        ""unsorted"": false,
        ""empty"": false
    },
    ""number"": 0,
    ""size"": 10,
    ""first"": true,
    ""numberOfElements"": 3,
    ""empty"": false
}
```

- **Request Headers:**

| Key  | Description |
| ------------- | ------------- |
| `Authorization` | _Authorization token_ |

- **Request Parameters:**

| Key  | Description |
| ------------- | ------------- |
| `size` | _Number of records that should be returned_ |
| `sort` | _Sort by object attribute in descending order_ |
| `page` | _Page number_ |

- **Responses:**

| Code  | Description |
| ------------- | ------------- |
| `200` | _Successful operation_ |
| `403` | _Unauthorized / Invalid token_ | 


#### PUT - [**/api/v1.0/doctors**] - Updates an existing doctor

- **Body:**
```
{   
    ""id"" (number, required),
    ""name"" (string, optional), 
    ""telephone"" (string, optional),  
    ""address"": {   
        ""street"" (string, optional),
        ""neighborhood"" (string, optional), 
        ""zipcode"" (string, optional),  
        ""city"" (string, optional),  
        ""state"" (string, optional),
        ""additionalDetails"" (string, optional),  
        ""houseNumber"" (string, optional),
    } 
}
```

- **Request Headers:**

| Key  | Description |
| ------------- | ------------- |
| `Authorization` | _Authorization token_ |

- **Responses:**

| Code  | Description |
| ------------- | ------------- |
| `200` | _Successful operation_ |
| `400` | _Validation Error_ |
| `403` | _Unauthorized / Invalid token_ | 


#### DELETE - [**/api/v1.0/doctors/{id}**] - Deactivates an existing doctor

- **Response Body Example:**
```
{
    ""id"": 2,
    ""name"": ""DEACTIVATED DOCTOR TEST"",
    ""email"": ""test@gmail.com"",
    ""crm"": ""12456"",
    ""telephone"": ""(81) 99999999"",
    ""specialty"": ""ORTHOPEDICS"",
    ""active"": false,
    ""address"": {
        ""street"": ""TEST STR."",
        ""neighborhood"": ""TEST NEIGHBORHOOD"",
        ""zipCode"": ""12345678"",
        ""city"": ""TEST CITY"",
        ""state"": ""ST"",
        ""additionalDetails"": null,
        ""houseNumber"": null
    }
}
```

- **Request Headers:**

| Key  | Description |
| ------------- | ------------- |
| `Authorization` | _Authorization token_ |

- **Request Parameters:**

| Key  | Description |
| ------------- | ------------- |
| `id` | _Unique identifier of the doctor who will be deactivated_ |

- **Responses:**

| Code  | Description |
| ------------- | ------------- |
| `200` | _Successful operation_ |
| `400` | _Validation Error_ |
| `404` | _Entity not found_ |
| `403` | _Unauthorized / Invalid token_ | 

### patients

#### POST - [**/api/v1.0/patients**] - Adds a new patient

- **Body:**
```
{   
    ""name"" (string, required),  
    ""email"" (string, required),  
    ""cpf"" (string, required),  
    ""telephone"" (string, required), 
    ""address"": {   
        ""street"" (string, required),
        ""neighborhood"" (string, required), 
        ""zipCode"" (string, required),  
        ""city"" (string, required),  
        ""state"" (string, required),
        ""additionalDetails"" (string, optional),  
        ""houseNumber"" (string, optional)
    } 
}
```

- **Request Headers:**

| Key  | Description |
| ------------- | ------------- |
| `Authorization` | _Authorization token_ |

- **Responses:**

| Code  | Description |
| ------------- | ------------- |
| `201` | _Successfully created_ |
| `400` | _Validation Error_ |
| `403` | _Unauthorized / Invalid token_ | 


#### GET - [**/api/v1.0/patients/{id}**] - Get an existing patient

- **Response Body Example:**
```
{
    ""id"": 1,
    ""name"": ""PATIENT TEST"",
    ""email"": ""test@gmail.com"",
    ""cpf"": ""11111111111"",
    ""telephone"": ""(81) 99999999"",
    ""active"": true,
    ""address"": {
        ""street"": ""TEST STR."",
        ""neighborhood"": ""TEST NEIGHBORHOOD"",
        ""zipCode"": ""12345678"",
        ""city"": ""TEST CITY"",
        ""state"": ""ST"",
        ""additionalDetails"": null,
        ""houseNumber"": null
    }
}
```

- **Request Headers:**

| Key  | Description |
| ------------- | ------------- |
| `Authorization` | _Authorization token_ |

- **Request Parameters:**

| Key  | Description |
| ------------- | ------------- |
| `id` | _Unique identifier of the patient who will be fetched_ |

- **Responses:**

| Code  | Description |
| ------------- | ------------- |
| `200` | _Successful operation_ |
| `404` | _Entity not found_ |
| `403` | _Unauthorized / Invalid token_ | 

#### GET - [**/api/v1.0/patients**] - Get a list of patients

- **Response Body Example:**
```
{
    ""content"": [
        {
            ""name"": ""Test1"",
            ""email"": ""test1@gmail.com"",
            ""cpf"": ""123456""
        },
        {
            ""name"": ""Test2"",
            ""email"": ""test2@gmail.com"",
            ""cpf"": ""789101""
        },
        {
            ""name"": ""Test3"",
            ""email"": ""test3@gmail.com"",
            ""cpf"": ""112131""
        },
    ],
    ""pageable"": {
        ""pageNumber"": 0,
        ""pageSize"": 10,
        ""sort"": {
            ""sorted"": true,
            ""unsorted"": false,
            ""empty"": false
        },
        ""offset"": 0,
        ""paged"": true,
        ""unpaged"": false
    },
    ""totalPages"": 1,
    ""totalElements"": 3,
    ""last"": true,
    ""sort"": {
        ""sorted"": true,
        ""unsorted"": false,
        ""empty"": false
    },
    ""number"": 0,
    ""size"": 10,
    ""first"": true,
    ""numberOfElements"": 3,
    ""empty"": false
}
```

- **Request Headers:**

| Key  | Description |
| ------------- | ------------- |
| `Authorization` | _Authorization token_ |

- **Request Parameters:**

| Key  | Description |
| ------------- | ------------- |
| `size` | _Number of records that should be returned_ |
| `sort` | _Sort by object attribute in descending order_ |
| `page` | _Page number_ |

- **Responses:**

| Code  | Description |
| ------------- | ------------- |
| `200` | _Successful operation_ |
| `403` | _Unauthorized / Invalid token_ | 

#### PUT - [**/api/v1.0/patients**] - Updates an existing patient

- **Body:**
```
{   
    ""id"" (number, required),
    ""name"" (string, optional), 
    ""telephone"" (string, optional),  
    ""address"": {   
        ""street"" (string, optional),
        ""neighborhood"" (string, optional), 
        ""zipcode"" (string, optional),  
        ""city"" (string, optional),  
        ""state"" (string, optional),
        ""additionalDetails"" (string, optional),  
        ""houseNumber"" (string, optional),
    } 
}
```

- **Request Headers:**

| Key  | Description |
| ------------- | ------------- |
| `Authorization` | _Authorization token_ |

- **Responses:**

| Code  | Description |
| ------------- | ------------- |
| `200` | _Successful operation_ |
| `400` | _Validation Error_ |
| `403` | _Unauthorized / Invalid token_ | 

#### DELETE - [**/api/v1.0/patients/{id}**] - Deactivates an existing patient

- **Response Body Example:**
```
{
    ""id"": 1,
    ""name"": ""DEACTIVATED PATIENT TEST"",
    ""email"": ""test@gmail.com"",
    ""cpf"": ""11111111111"",
    ""telephone"": ""(81) 99999999"",
    ""active"": false,
    ""address"": {
        ""street"": ""TEST STR."",
        ""neighborhood"": ""TEST NEIGHBORHOOD"",
        ""zipCode"": ""12345678"",
        ""city"": ""TEST CITY"",
        ""state"": ""ST"",
        ""additionalDetails"": null,
        ""houseNumber"": null
    }
}
```

- **Request Headers:**

| Key  | Description |
| ------------- | ------------- |
| `Authorization` | _Authorization token_ |

- **Request Parameters:**

| Key  | Description |
| ------------- | ------------- |
| `id` | _Unique identifier of the patient who will be deactivated_ |

- **Responses:**

| Code  | Description |
| ------------- | ------------- |
| `200` | _Successful operation_ |
| `400` | _Validation Error_ |
| `404` | _Entity not found_ |
| `403` | _Unauthorized / Invalid token_ | 

### consultations

#### POST - [**/api/v1.0/consultations**] - Adds a new consultation

- **Body:**
```
{   
    ""patientId"" (number, required),  
    ""consultationDate"" (string, required),  
    ""doctorId"" (number, required if _specialty_ field is not filled),
    ""specialty"" (string, required if _doctorId_ field is not filled)
}
```

- **Request Headers:**

| Key  | Description |
| ------------- | ------------- |
| `Authorization` | _Authorization token_ |

- **Responses:**

| Code  | Description |
| ------------- | ------------- |
| `201` | _Successfully created_ |
| `400` | _Validation Error_ |
| `403` | _Unauthorized / Invalid token_ | 
| `404` | _Entity not found_ |

#### GET - [**/api/v1.0/consultations/{id}**] - Get an existing consultation

- **Response Body Example:**
```
{
    ""id"": 1,
    ""consultationDate"": ""22/04/2024 10:34"",
    ""patient"": {...},
    ""doctor"": {...},
    ""canceled"": false,
    ""reasonCancellation: """"
}
```

- **Request Headers:**

| Key  | Description |
| ------------- | ------------- |
| `Authorization` | _Authorization token_ |

- **Request Parameters:**

| Key  | Description |
| ------------- | ------------- |
| `id` | _Unique identifier of the consultation that will be fetched_ |

- **Responses:**

| Code  | Description |
| ------------- | ------------- |
| `200` | _Successful operation_ |
| `404` | _Entity not found_ |
| `403` | _Unauthorized / Invalid token_ | 

#### DELETE - [**/api/v1.0/consultations**] - Cancels a scheduled consultation

- **Body:**
```
{   
    ""consultationId"" (number, required),  
    ""reasonCancellation"" (string, required),  
}
```

- **Request Headers:**

| Key  | Description |
| ------------- | ------------- |
| `Authorization` | _Authorization token_ |

- **Responses:**

| Code  | Description |
| ------------- | ------------- |
| `200` | _Successful operation_ |
| `403` | _Unauthorized / Invalid token_ | 
| `404` | _Entity not found_ |
",0,0,12,,1,11.0,1.0,1.0,4.0,0.0,-0.65,93.0
stuetzlec/merrimack_cs_examples,main,"# merrimack_cs_examples
Coding examples used in Merrimack College Computer Science courses
",0,0,1,GPL-3.0,0,0.0,0.0,0.0,0.0,0.0,1.0,0.0
lgdd/liferay-client-extensions-samples,main,"![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/lgdd/liferay-client-extensions-samples/builder.yml?label=auto-update&style=flat)
![GitHub last commit](https://img.shields.io/github/last-commit/lgdd/liferay-client-extensions-samples?color=informational&label=latest%20update)

# Liferay Client Extensions Samples

Automatically mirror official client extensions samples you can find in the main repo here: https://github.com/liferay/liferay-portal/tree/master/workspaces/liferay-sample-workspace/client-extensions

The goal of this repository is to ease the process of trying out client extensions samples by removing the burden of cloning liferay-portal & by renaming ambiguous client extensions (e.g. `custom-element-1`).

The official readme file for those samples is mirrored in the [HOW-TO.md](HOW-TO.md).

The new naming is an arbitrary choice based on the description provided by Liferay in the readme file. Here's the correspondance for the renamed client extensions:

| **Original name** | **New name**                                                 			|
|-------------------|-------------------------------------------------------------------|
| liferay-sample-custom-element-1  | liferay-sample-custom-element-vanilla-js      			|
| liferay-sample-custom-element-2  | liferay-sample-custom-element-react-scripts   			|
| liferay-sample-custom-element-3  | liferay-sample-custom-element-angular         			|
| liferay-sample-custom-element-4  | liferay-sample-custom-element-react-dom       			|
| liferay-sample-custom-element-5  | liferay-sample-custom-element-react-clayui    			|
| liferay-sample-etc-frontend      | liferay-sample-etc-frontend-shared-import-map 			|
| liferay-sample-global-js-1       | liferay-sample-global-js-page			           			|
| liferay-sample-global-js-2       | liferay-sample-global-js-page-with-attributes 			|
| liferay-sample-global-js-2       | liferay-sample-global-js-instance      			 			|
| liferay-sample-iframe-1          | liferay-sample-iframe-counter                 			|
| liferay-sample-iframe-2          | liferay-sample-iframe-wikipedia               			|
| liferay-sample-theme-css-1       | liferay-sample-theme-css-styled               			|
| liferay-sample-theme-css-2       | liferay-sample-theme-css-unstyled             			|
| liferay-sample-theme-css-3       | liferay-sample-theme-css-token-definition     			|
| liferay-sample-theme-css-4       | liferay-sample-theme-css-unstyled-token-definition |
| liferay-sample-theme-spritemap-1 | liferay-sample-theme-spritemap-single-svg     			|
| liferay-sample-theme-spritemap-2 | liferay-sample-theme-spritemap-multiple-svg   			|

## Aditional information

If the build fails because of the Node version, you can force the use of a specific version by changing the build.gradle with something like:

```gradle
apply plugin: ""com.liferay.node""

node {
	nodeVersion = ""20.10.0""
	global = false
}
```
> Note that you can apply this for a specific client extension or all client extensions if you change the value in the parent folder (`client-extensions` or your liferay workpace).",0,0,1,MIT,1,1.0,1.0,1.0,6.0,0.0,-1.15,0.0
MehVahdJukaar/polytone,1.21.3,"## Polytone
[![polytone_banner](https://github.com/MehVahdJukaar/polytone/assets/24719182/7c5bb84a-5aa8-4883-9e23-c27e8ce60c22)](https://legacy.curseforge.com/minecraft/mc-mods/polytone)

Polytone is a powerful client-side customization mod which allows tweaking various aspect with the game via Resource Packs

These include:

* Customize Map Colors 🗺️
* Customize Dye Colors 🖌️
* Change Block Sounds 🎵
* Custom Colormaps 🎨
* Block Offset Type 📐
* Customize Biome Effects 🌊

For some things the mod also offers backwards compatibility with the system previously offered by Optifine (color.properties file), allowing said features from existing packs to work aswell

The mod is designed to be fast and as lightweight as possible while keeping the most customization it can. 
Not only does it offer a replacement for color.properties system but also offer way, way more features and customization options that were previously not available.

The mod can work both in VANILLA and in MODDED environment, working flawlessly with ANY Biome, Particle, Blocks and so on, unlike what previous mods did.

The mod is meant to be used by anyone


For extensive documentation follow the mod Wiki here

https://github.com/MehVahdJukaar/polytone/wiki/Custom-Colors

https://github.com/MehVahdJukaar/polytone/wiki/Custom-Block-Properties

https://github.com/MehVahdJukaar/polytone/wiki/Custom-Biome-Effects
",0,30,9,NOASSERTION,0,7.0,0.0,0.0,0.0,0.0,1.0,0.0
sameh-tarek/Fawry-Internship,main,"# Fawry Full Stack Engineering Internship

<details>
  <summary>Click to view Fawry image</summary>
  
  ![Fawry](https://github.com/user-attachments/assets/0c4189f6-cdea-4a4f-984a-90a2520f661c)
  
</details>


## About 

This repository serves as a record of the resources and tasks I'm working on during my internship at [Fawry](https://www.fawry.com/). My focus is on mastering full-stack development using **Spring Boot** and **Angular**. By documenting my learning journey, I hope to keep things organized and make it easier for others to access valuable knowledge. I believe that the content shared here will benefit anyone interested in full-stack development and contribute to the broader learning community.

## Table of Contents

| Week         | Content                                              |
|--------------|------------------------------------------------------|
| 01           | [Week 01](./Week01#readme)                           |
| 02           | [Week 02](./Week02#readme)                           |
| 03           | [Week 03](./Week03#readme)                           |
| 04           | [Week 04](./Week04#readme)                           |
| 05           | [Week 05](./Week05#readme)                           |
| 06           | [Week 06](./Week06#readme)                           |
| Final Project| [Final Project](https://github.com/Fawry-Internship)  |

## Exploration Tips
- Explore the weekly sections to find detailed insights and resources for each phase of the internship. 🕵️‍♂️
- The resources shared include articles, videos, and documentation that I personally found useful for learning full-stack development. 📚


<details>
  <summary>Some Memorable pictures</summary>
  
  ![IMG-20240419-WA0031](https://github.com/user-attachments/assets/d4c6f53f-c781-4557-b2a2-b681dab0a01c)
  ![1714424120186](https://github.com/user-attachments/assets/4320e0df-a27b-4c0a-bc6c-dc53ce23e0de)

</details>
",0,0,2,,0,4.0,0.0,0.0,0.0,0.0,1.0,16.0
Apress/ChatGPT-for-Java,main,"# Apress Source Code

This repository accompanies [*ChatGPT for Java*](https://www.link.springer.com/book/10.1007/979-8-8688-0116-7) by Bruce Hopkins (Apress, 2024).

[comment]: #cover
![Cover image](979-8-8688-0115-0.jpg)

Download the files as a zip using the green button, or clone the repository to your machine using Git.

## Releases

Release v1.0 corresponds to the code in the published book, without corrections or updates.

## Contributions

See the file Contributing.md for more information on how you can contribute to this repository.",1,0,1,NOASSERTION,0,0.0,0.0,0.0,0.0,0.0,1.0,0.0
koupleless/koupleless,main,"[![Coverage Status](https://codecov.io/gh/koupleless/koupleless/branch/main/graph/badge.svg)](https://codecov.io/gh/koupleless/koupleless/branch/main/graph/badge.svg)
![license](https://img.shields.io/badge/license-Apache--2.0-green.svg)
![Maven Central](https://img.shields.io/maven-central/v/com.alipay.sofa.koupleless/koupleless-runtime)

<h1 align=""center"">Koupleless: Modular Development Framework and Serving Platform</h1>

<div align=""center"">

English | [简体中文](./README-zh_CN.md)

</div>

Would you like your application to start in just 10 seconds, consuming only 20MB of memory? Have you encountered issues with large applications causing collaboration bottlenecks and low release efficiency? Are you struggling with the high resource and maintenance costs associated with numerous small applications? If you're facing these challenges, then Koupleless might be the solution you're looking for. Koupleless approaches application architecture from a modular perspective, offering an extremely low-cost solution to address pain points encountered throughout the entire lifecycle of application development, operation, and execution:

1. Excessive application fragmentation leading to high machine and long-term maintenance costs
2. Insufficient application fragmentation causing collaboration bottlenecks
3. Lengthy application build, startup, and deployment times resulting in low iteration efficiency
4. Severe fragmentation of SDK versions with high upgrade costs and long cycles
5. High costs associated with building platforms and middle platforms, as well as difficulties in business asset precipitation and architectural constraints
6. Long microservice chains leading to poor call performance
7. High costs associated with microservice decomposition and evolution

How does Koupleless address these issues? Koupleless vertically and horizontally splits traditional applications, with the vertical split separating the base and the horizontal split separating multiple modules. The base shields modules from infrastructure concerns, while modules contain only the business-specific portion, enabling quick startup and insulating them from infrastructure concerns, allowing module developers to experience a Serverless-like environment. Koupleless thus evolves into a low-cost, Serverless solution by refining the granularity of development and operations while shielding infrastructure. For detailed explanations of the principles, please refer to the official website.
Further detailed explanations of the principles are available on [the official website](https://koupleless.io/docs/introduction/architecture/arch-principle/).

![image](https://github.com/koupleless/koupleless/assets/3754074/004c0fa5-62f6-42d7-a77e-f7152ac89248)

The most important aspect is that Koupleless can **assist existing applications** in evolving into a modular development model **at an extremely low cost**, addressing the aforementioned issues and helping businesses reduce costs, increase efficiency, and enhance competitiveness.

## The Advantages of Koupleless

Koupleless is a mature development framework and operational scheduling platform capability that has been refined internally within Ant Group for 5 years. Compared to traditional image-based application models, it offers approximately 10 times improvement in development, operations, and runtime calling. Summarized into 5 key features: Fast, Cost-efficient, Flexible deployment, Smooth evolution, and Production-scale validation.

<img width=""788"" alt=""image"" src=""https://github.com/sofastack/sofa-serverless/assets/3754074/11d1d662-d33b-482b-946b-bf600aeb34da"">

Here are performance data comparing modular development and deployment with traditional image-based approaches for an actual production application.

<img width=""600"" alt=""image"" src=""https://github.com/koupleless/koupleless/assets/3754074/913a6f11-54cb-4c8b-b417-d014e53c920a""/>

## What is a Module?

Modules utilize extreme sharing and isolation technologies, which enable hot deployment (updating online code without restarting the machine).

Isolation is achieved through ClassLoader class isolation based on [SOFAArk](https://github.com/sofastack/sofa-ark) and object isolation based on [SpringBoot SpringContext](https://github.com/spring-projects/spring-boot).

Sharing is facilitated by class delegation loading based on [SOFAArk](https://github.com/sofastack/sofa-ark) and cross-SpringContext object lookup and invocation based on SpringBootManager.

So, in physical terms, a module can be considered as one ClassLoader + one SpringContext.

## What is the Base？
The base is just a regular application, same with the original app (such as standard SpringBoot).

## Quick start
Please check [the official website Quick Start](https://koupleless.io/docs/quick-start/).

https://github.com/koupleless/koupleless/assets/3754074/e44c9406-4bd4-4fcf-babc-4ae9e615984e

## Koupleless Components

![image](https://github.com/sofastack/sofa-serverless/assets/101314559/995f1e17-f3be-4672-b1b8-c0c041590fb0)

## Contributing
We appreciate anyone who contribute here together. Please scan the QR code to join the developer collaboration group.

| IAM                        | number      | QR code                                                                                                                          |
|----------------------------|-------------|----------------------------------------------------------------------------------------------------------------------------------|
| DingTalk group (recommand) | 24970018417 | <img width=""256"" alt=""image"" src=""https://github.com/koupleless/koupleless/assets/3754074/7ba1db74-20c1-43a4-a2ab-d38c99a920cd""> |
| WeChat                     | zzl_ing     | <img width=""256"" alt=""image"" src=""https://github.com/koupleless/koupleless/assets/3754074/35ebc2bc-86cd-4a24-b12e-e9f44cccc2d7""> |

you can also join us by [discord](https://discord.gg/bqx9RDbSfF)

## Long-term planning and our vision
We hope to further refine and open up these capabilities to be more extreme and applicable to a wider range of scenarios. Help more businesses solve application development problems, achieve cost reduction and efficiency improvement, and ultimately become an excellent research and development framework and solution for global green computing, achieving:

1. Speed as you need
2. Pay as you need
3. Deploy as you need
4. Evolution as you need

<img width=""1069"" alt=""image"" src=""https://github.com/koupleless/koupleless/assets/3754074/17ebd41d-38c7-46e8-a4ba-b6b8bf8f76dd"">
",19,84,16,Apache-2.0,1,90.0,1.0,1.0,3.0,0.0,-0.4,0.0
alegian/thaumcraft7,main,"# Thaumcraft 7 (Thavma)

## Preface

A complete rewrite & re-imagination of azanor's Thaumcraft for modern versions of Minecraft.
I am in no way associated with azanor and will not use any of their assets,
except perhaps temporarily the mod name (which I will also change upon release).

What version of Thaumcraft am I rewriting? None specifically. I am going to implement what
I enjoyed most from each version (my favorite being Thaumcraft 4.2). I plan to add
features that did not exist in the original mod, and change old features to give them
fresh new mechanics, visuals and names.

I happen to be Greek, Thaumaturgy literally means ""the act of performing miracles"".
Good pick azanor ;-)

## Credit

- Azanor, for being the original author of my favorite mod
- The NeoForge Project discord community, for answering my questions countless times
- Team CoFH, for allowing anyone to learn from their code. Also, modified versions of their license and their package
  structure are used here
- McJTy, for their minecraft modding tutorials
- The JEI team, for being open source. Their codebase taught me how to use custom Texture Atlases
- The https://game-icons.net/ team, for their free icons, under
  the [CC BY 3.0](https://creativecommons.org/licenses/by/3.0/) license. All icons were taken as-is
- Reaves, for their awesome original models & textures
- Gigaherz, for
  their [custom core shader tutorial gist](https://gist.github.com/gigaherz/b8756ff463541f07a644ef8f14cb10f5), pretty
  much the only resource online that describes this process
- The Artifacts team, for being open source. Their codebase taught me how to use Attribute Modifiers and how to render
  custom cuboids on HumanoidModels

## License

This repository uses a modified version of the CoFH ""Don't Be a Jerk"" License v2. [Read the file](LICENSE.md) for
details.
",0,0,1,NOASSERTION,1,2.0,1.0,1.0,3.0,0.0,-0.4,0.0
d1tto/Rengar,master,"# Rengar

**Rengar** is the prototype of paper ""Effective ReDoS Detection by Principled Vulnerability Modeling and Exploit Generation"" published in S&P'23.",0,1,1,,0,0.0,0.0,0.0,0.0,0.0,1.0,0.0
Rozmir-Rohi/mo-creatures-legacy,main,"# Mo Creatures Legacy
<strong> Project Status:</strong> On Hold (future update(s) planned)

<br><br>


The final version of Mo' Creatures for 1.7.10 was unfinished and was riddled with bugs. This project fixes that.

The main aim of Mo' Creatures Legacy is to provide a fully working legacy version of Mo' Creatures for 1.7.10.

<br><br>

<strong> DISCLAIMER: </strong>
* This project is not endorsed by Dr Zhark or anyone from the original Mo' Creatures team.
* This project does not backport features from newer versions of Mo' Creatures.
 

 
## How to Install:
Mo' Creatures Legacy is a stand-alone mod and does NOT require any other mods as dependencies.
Assuming you have Java 8 installed on your computer and Forge installed for 1.7.10, just download the mod and put it into the mods folder. 

Do NOT try to use this mod with the Custom Mob Spawner mod, if you need to adjust entity spawns use the Just Another Mob Spawner instead.

Do NOT try to load this mod into a world that previously had the original Mo' Creatures mod.

 


<details>
<summary><h2>Credits & Assets Used:</h2></summary>
<strong>DrZhark, Bloodshot, BlockDaddy and remaining Original Mo' Creatures contributers </strong> - This project is a modified version of DrZhark's Mo' Creatures Mod v6.3.1 for Minecraft 1.7.10 and is licensed under the ""GNU General Public License v3.0 and Further Conditions"" custom license which satisfies the GNU General Public License Version 3 as per the conditions of the original project's license. DrZhark's Mo' Creatures Mod Original Forum Post:  http://www.minecraftforum.net/viewtopic.php?f=25&t=86929
<br><br>

<strong> crazyspacekid </strong> - Entity textures were overhauled with the application of modified textures from the Mo' Creatures 16x texture pack. This asset was used with permission from the owner and proof of permission can be found inside the assets folder of the mod jar archive as an image file. All changes to original 16x textures have been documented in the ""Rozmirs modifications to Mo Creature 16x Textures"" text file inside the assets folder of the jar archive. Curseforge Project Link: https://www.curseforge.com/minecraft/texture-packs/mo-creatures-16x
<br><br>
 
<strong> Azanor </strong>  - Thaumcraft 4.2.2 API was used as a library under the MIT License to add Thaumcraft aspects to mod content.
<br><br>

<strong> WildBamaBoy </strong> - The horse achievement icon textures were directly based of the Cooconed Horse item texture from the Spider Queen mod. This asset was used under the Public Domain license through the condition of section 8 of the MCA Minecraft Mod License v1.1.1 (""In the event that no public declaration of the mod’s end-of-life is made within 1 year after the previous update, announcement regarding status, or official statement from an author, the mod is released into the public domain.""). Additionally, all the skins for the Minecraft Comes Alive Witchery werewolf villager forms were sourced from the Minecraft Comes Alive mod, the use of these assets are satisfied through the application of the ""GNU General Public License v3.0 and Further Conditions"" custom license which satisfies the GNU General Public License Version 3 of the Minecraft Comes Alive mod.
<br><br>
 
<strong> ganymedes01 </strong> - Code for proper damaging and item dropping for kitty litter box, kitty bed, and fish bowl was sourced from EntityArmourStand.class from the etfuturum mod. This asset was used under the Public Domain license.
<br><br>

<strong> Thornack </strong> - Provided the code for replacing the Witchery player wolf and player werewolf models with the Mo Creatures dire wolf and werewolf models (https://forums.minecraftforge.net/topic/28566-1710-how-to-change-player-model-and-texture/).
<br><br>
 
<strong> TheAetherTeam </strong> - The AchievementsAether.class and Aether.class code from the 1.7.10 Aether Mod helped me understand how to add an achievements class that is separate to the main mod class file. This asset was used under the GNU Lesser General Public License v3.0 through the custom license condition of The Aether mod ""The source code of The Aether mod for Minecraft 1.7+ is under the LGPL v3.0 license"".TheAetherTeam - The AchievementsAether.class and Aether.class code from the 1.7.10 Aether Mod helped me understand how to add an achievements class that is separate to the main mod class file. This asset was used under the GNU Lesser General Public License v3.0 through the custom license condition of The Aether mod ""The source code of The Aether mod for Minecraft 1.7+ is under the LGPL v3.0 license"".The different custom license of this project is permitted under the GNU Lesser General Public License v3.0 from the following sections:

	GNU Lesser General Public License v3.0 - Section 0:
		   ""...""The Library"" refers to a covered work governed by this License"",
		   ""A “Combined Work” is a work produced by combining or linking an Application with the Library""

	GNU Lesser General Public License v3.0 - Section 4:
		""You may convey a Combined Work under terms of your choice"" provided that:
			- Private modifications are allowed.
 		     	- Notice is given that the Library is used
		      	- A copy of the GNU Lesser Public License is provided along with a copy of the GNU General Public License.
 		     	- Access is provided to the source code of the Library.


A copy of the GNU Lesser General Public License (1.7.10 Aether Source Code License) can be found in the ""Negligable Licenses"" folder inside the assets folder of the mod jar archive. 

A copy of the GNU General Public license can be found inside the assets folder of the mod jar archive.

The source code for the 1.7.10 Aether mod can be found here: https://github.com/The-Aether-Team/The-Aether-Archived/tree/1.7.10
 
<br><br><br>  
 
 <h3> Sounds Files: </h3>
 
 <strong> Mike Koenig </strong> - Kitty using Litter box sound was sourced from: https://soundbible.com/313-Dig-In-A-Cat-Litter-Box.html. This was used under the CC BY 3.0 DEED Attribution 3.0 Unported license. A different license for this project as a whole is acceptable under section 4a ""this does not require the Collection apart from the Work itself to be made subject to the terms of this License"".
 
 <strong> Fesliyan Studios </strong> - Rattle Snake Rattle sound effects were sourced from https://www.fesliyanstudios.com/royalty-free-sound-effects-download/rattlesnake-281 This was used under the Fesliyan Studios Sound Effects Policy license (see ""Negligable Licenses"" folder inside the assets folder of the mod jar archive ).
 
  
 
The following assets were used under the Unlicense license:
 
 Panda Cub Grunt:
 
 - https://quicksounds.com/sound/2742/panda-bear-bark-1
 - https://quicksounds.com/sound/2743/panda-bear-bark-2
 
 
 Panda Cub Hurt & Death: https://www.youtube.com/watch?v=YRmGZIENeq4&ab_channel=audiofreeHD 
 
 Panda Cub Hurt: https://www.youtube.com/watch?v=AyY70jPsZcc&ab_channel=nosoundeffects
 
 
 Panda Adult Grunt: https://www.youtube.com/watch?v=4TANecQTYPY&ab_channel=SFX-SoundEffectsForContentCreators
 
 
 Panda Adult Hurt and Death: https://www.youtube.com/watch?v=i5Y_8s6qDdk&ab_channel=FreeSoundEffect


<br><br><br>

 <h3> Language File Translations: </h3>
	Omgise - Chinese (Simplified) (zh_CN.lang)
	<br><br>
 	Hudhand - Russian (ru_RU.lang)
  
<br><br><br>

<h3> Beta Testers Who Helped Solve Major Bugs: </h3>
	Omgise
 	<br><br>
	quentin452
 	<br><br>
	brandyyn
 	<br><br>
	yoruki_167
  
<br><br><br>
 
 ===========================================================================
  <h3> Original Mo'Creatures Contributor Credits </h3>
 
 
 - Kent C Jensen (BlockDaddy) for his amazing Ogres and fish textures. And for his incredible help with ostriches and fish bowls. He is the main force behind the horse overhaul and did all of the textures and art, as well as many of the ideas for the new horses. He has also been helping with the remodelling and retexturing. Most models and textures on this mod have been done by Kent.
 - blood (Bloodshot    AKA     bloodmc)  for his invaluable help with updating to 1.8.1 and Mo'Creatures SMP, and maintaning the SMP code on MoCreatures 4.2.0
 - ScottKillen for his help with the Extrabiomes XL
 - AtomicStryker for the SMP port for Minecraft 1.2.5
 - Cojomax for his help with adding the sounds without audiomod
 - Freakstricth for his help with the Forge sprites.
 - Resuke for his sprites
 - Vaprtek, for his awesome Horse Model.
 - Dorino1 quack sounds plus painterly pack's duck texture.
 - Macaque for his boar textures.
 - KodaichiZero for his Bunnies!
 - Rondaround: fox idea, AI, sounds and texture
 - _303 and Risugami for their help with ModLoader and AudioMod
 - Corosus for pointing some optimization changes in the code
 - charle88 for shark's model inspiration
 - cdrumer11 for his help with the pink and white dolphin skins

 ===========================================================================

<br><br><br>

## Use of anatawa12's Fork of ForgeGradle 1.2 within Project:
The source code of this project uses anatawa12's fork of ForgeGradle 1.2 as a library under the GNU Lesser General Public License v2.1 (https://choosealicense.com/licenses/lgpl-2.1/).
 

Compiled versions of this mod are permitted under section 5 of the original license, ""A program that contains no derivative of any portion of the Library, but is designed to work with the Library by being compiled or linked with it, is called a ""work that uses the Library"". Such a work...is not a derivative work of the Library""; consequently the conditions of the original license do not apply to the work.


The source code of this mod is permitted under section 6 of the original license, ""you may also combine or link a ""work that uses the Library"" with the Library to produce a work containing portions of the Library, and distribute that work under terms of your choice"" provided that:
* Private modifications are allowed.
* Notice is given that the Library is used and a copy of it's original license is provided.
* Access is provided to the source code of the Library.


The source code for anatawa12's fork of ForgeGradle 1.2 can be found here: https://github.com/anatawa12/ForgeGradle-1.2

</details>
",1,1,1,NOASSERTION,1,24.0,1.0,1.0,5.0,0.0,-0.9,0.0
sidduganeshsid/Core-Java,main,"# Core Java Codes
<!--<iframe width=""600"" height=""400"" frameBorder=""0"" src=""https://www.mindmeister.com/maps/public_map_shell/3067400300/core-java-java-se-made-by-sidduganesh?width=600&height=400&z=auto&no_share=1&no_logo=1"" scrolling=""no"" style=""overflow:hidden;margin-bottom:5px"">Your browser is not able to display frames. -->Please visit <a href=""https://www.mindmeister.com/3067400300/core-java-java-se-made-by-sidduganesh"" target=""_blank"">Core Java (Java SE) made by sidduganesh</a> on MindMeister.
",0,0,2,,0,1.0,0.0,0.0,0.0,0.0,1.0,0.0
frc-862/rhapsody,main,"# Rhapsody

<p align = ""Center"">
   <img src=""https://github.com/frc-862/Rhapsody/assets/92895537/05e5b36d-0b52-47e8-891f-d0e9886f86b1"" width=554 height=240 />
   <img src=""https://cdn.discordapp.com/attachments/1201511131370508331/1201511198080909393/IMG_3730.png?ex=65d35000&is=65c0db00&hm=1c2111ba0e1921cb1f15ecc6da83d6418ce2d2d9720ad434f2483d6682e6c208&"" width=768 height=576/>
</p>
 
<h4 align = ""Center"">
  2024 Crescendo robot code for our robot, Rhapsody
</h4>
",5,16,14,GPL-3.0,2,247.0,2.0,1.0,7.0,0.0,-1.95,0.0
MincraftEinstein/SubtleEffects,main,"# Subtle Effects

![Banner](https://imgur.com/yVBI5Qb.png)

![](https://img.shields.io/badge/Mod%20Loaders-NeoForge%20%26%20Fabric-green?style=for-the-badge)
[![Curseforge Page](https://img.shields.io/badge/Curseforge-Page-orange?style=for-the-badge&logo=curseforge ""Curseforge page"")](https://curseforge.com/minecraft/mc-mods/subtle-effects)
[![Modrinth Page](https://img.shields.io/badge/Modrinth-Page-1bd96a?style=for-the-badge&logo=modrinth)](https://modrinth.com/mod/subtle-effects)
[![Github](https://img.shields.io/badge/GitHub-Repository-blueviolet?style=for-the-badge&logo=github)](https://github.com/MincraftEinstein/SubtleEffects)
[![Discord Invite](https://img.shields.io/badge/Discord-Einstein%27s%20Lab-blue?style=for-the-badge&logo=discord)](https://discord.gg/gSsaFAvrBM)

### **📘 Description**
Adding many new subtle details through particles and a few sounds. All of which can be toggled and some can be customized. The mod also comes with built-in particle culling and a particle render distance

**✨ Some Key Features**
- Particle culling
- Particle render distance
- Fire related blocks (fire, campfires, candles, torches, etc) have sparks
- Villagers and players snore and have Z particles
- Slimes leave a trail of slime
- Glowstone and redstone blocks emit dust particles
- Allay and Vexes emit magic
- Shearing a sheep drops fluff
- Burning entities have sparks, smoke and flames
- Vanilla smoke has been replaced with updated textures similar to campfire smoke
- Players with 3 hearts or less have a heartbeat
- Players with 3 hunger or less have stomach growling
- Wearing a mob head will apply the spectator shader for that mob (currently only for the creeper head and Enderman head from Supplemenaries)
- Players and a few mobs have running dust clouds
- Mobs have dust clouds when they hit the ground
- And much more...

A full list of features can be found on the [wiki](https://github.com/MincraftEinstein/SubtleEffects/wiki).

Requires [Fzzy Config](https://modrinth.com/mod/fzzy-config).

<br>
<details>
<summary><b>📜 Terms of Use</b></summary>

```
You may
✅ Use this mod as a reference to understand and or create something of your own, as long as it is not a copy or recreation
✅ Use this mod in modpacks with credit and one or more links to any of the project pages*
✅ Edit for personal use
✅ Use this mod for/in YouTube videos with credit and one or more links to any of the project pages*
✅ Create resource packs, data packs, and addon mods for this mod

You may not
❌ Reupload/publish this mod to any website without explicit permission from me and one or more links to any of the project pages*
❌ Redistibute edited or unedited assets** from this mod without permission from me and credit

* Project pages include CurseForge, Modrinth, Planet Minecraft, GitHub
** Assets include logos, banners, textures, models etc
```
</details>

[<img alt=""Ko-fi Badge"" height=""15%"" width=""15%"" src=""https://storage.ko-fi.com/cdn/brandasset/kofi_bg_tag_dark.png"" alt=""Ko-fi badge"">](https://ko-fi.com/mincrafteinstein)

---

### 📚 F.A.Q

**Q:** Can XYZ feature be disabled?
<br>
**A:** Yes, all features can be disabled in the config menu.
If you find that a feature/change cannot be disabled please report it as a bug

**Q:** Can vanilla clients or clients without the mod join if the mod is installed on the server?
<br>
**A:** Yes, the mod does not need to be installed on the client to join

**Q:** Does this mod work with Fancy Block Particles, Particle Core, Visuality, or Particular?
<br>
**A:** Yes

**Q:** Particular's leaves aren't showing, how do I fix them?
<br>
**A:** Disable the 'Cull Particles With No Alpha' config inside the 'General' config section

**Q:** Do you take suggestions/feature requests?
<br>
**A:** Yes, suggestions and feedback in general are much appreciated.
You can provide feedback/suggestions in a GitHub issue, the CurseForge comments, or on my Discord Server.
Please keep your suggestions somewhat Minecraft-y, e.g. no blood.
Please also try not to suggest things that multiple other mods implement, such as rain ripples.

---

### **💬 Translations**
Feel free to translate this mod into any language or update existing translations.
To get your translation into the mod, make a pull request on GitHub with the translated language file.

All translators are credited in the list below.

- Simplified Chinese: [kuhananxianglai](https://github.com/kuhananxianglai)
- Japanese: [gohkenytp](https://github.com/gohkenytp)

---

Want to play with your friends on a server? Get 15% off your first month with code `einstein`.
Click [here](https://billing.kinetichosting.net/aff.php?aff=124) or on the banner below to get started!

[![Kinetic Hosting Banner](https://i.imgur.com/u6Fn0I0.png)](https://billing.kinetichosting.net/aff.php?aff=124)

---

Repository created from [MultiLoader-Template](https://github.com/jaredlll08/MultiLoader-Template)
",0,9,2,,0,4.0,0.0,0.0,0.0,0.0,1.0,0.0
begcode/begcode-admin,main,"# monolithMybatis

本应用程序由BegCode8.6.6生成, 你可以在 [https://www.begcode.com](https://www.begcode.com) 找到文档和帮助。

## 截图展示

### 登录

![登录](./doc/images/login.png)

### 首页

![首页](./doc/images/index.png)

### 菜单列表

![菜单列表](./doc/images/view_permission.png)

### 角色列表

![角色列表](./doc/images/authority.png)

### 用户列表

![用户列表](./doc/images/user-list.png)

### 短信配置

![短信配置](./doc/images/sms_config.png)

### 图片上传

![图片上传](./doc/images/upload_image.png)

### 字典管理

![字典管理](./doc/images/dictionary.png)

### 操作日志

![操作日志](./doc/images/sys_log.png)

### 消息发布

![消息发布](./doc/images/announcement.png)

### Api列表

![Api列表](./doc/images/api.png)

### Icon选择参考

![Icon选择参考](./doc/images/icon_picker.png)

### 查看通知

![查看通知](./doc/images/notice.png)

## 项目结构

生成时需要 Node，并建议在开发过程中使用它。package.json 文件始终会生成，以提供更好的开发体验，包括 prettier、commit hooks、脚本等等。

在项目的根目录中，JHipster会生成用于配置诸如git、prettier、eslint、husky等众多常见工具的配置文件。你可以在网络上找到有关这些工具的参考文档。

`/src/*` 目录结构遵循默认的Java结构。

- `.yo-rc.json` - Yeoman配置文件（BegCode/JHipster配置文件）
  BegCode的配置存储在key为generator-begcode的属性中，这里定义了BegCode生成器的全局配置。此外，你可能会在项目根目录下的.yo-rc.json文件中找到类似generator-begcode-\*的蓝图配置，它包含了项目特定的配置选项。
- `.yo-resolve` (可选) - Yeoman 冲突解决器
  允许在发现冲突时使用特定操作，跳过匹配模式的文件的提示。每一行应该匹配 [模式] [操作]，其中模式是一个 Minimatch 模式，操作是 skip（如果省略则为默认操作）或者 force 中的一个。以 # 开头的行被视为注释，将被忽略。
- `.jhipster/*.json` - JHipster实体配置文件

- `npmw` - 用于本地安装的npm的包装器
  BegCode默认使用构建工具在本地安装Node和pnpm。此包装器确保本地安装pnpm并使用它，避免了不同版本可能引起的一些差异。通过使用./npmw而不是传统的npm，您可以配置一个无需Node的环境来开发或测试您的应用程序。
- `/src/main/docker` - 应用程序及其依赖的服务的Docker配置

## 开发

    构建系统将自动安装推荐的Node和pnpm版本。
    我们提供了一个包装器来启动 pnpm。

仅当 [package.json](package.json) 中的依赖项发生更改时，您才需要再次运行此命令。

```
./npmw install
```

我们使用 pnpm 脚本和 [Vite][] 作为我们的构建系统。

在两个单独的终端中运行以下命令，以创建更好的开发体验，其中当硬盘上的文件发生更改时您的浏览器自动刷新。

```
./mvnw
./npmw start
```

Npm 还用于管理此应用程序中使用的 CSS 和 JavaScript 依赖项。 您可以通过以下方式升级依赖项
在 [package.json](package.json) 中指定较新版本。 您还可以运行`pnpm update`和`pnpm install`来管理依赖项。
在任何命令上添加`help`标志以查看如何使用它。 例如，`pnpm help update`。

`./npmw run` 命令将列出可用于该项目运行的所有脚本。

## 系统构建

### 创建Jar包

要优化monolithMybatis应用程序创建Jar包并进行生产部署，请运行：

```
./mvnw package -Pprod clean verify -DskipTests
```

这将压缩客户端和重新打包CSS和JavaScript文件。 它还将修改`index.html`，以便引用这些新文件。
为了确保一切正常，请运行：

```
java -jar target/*.jar
```

然后在浏览器打开：[http://localhost:8080](http://localhost:8080)。

请参阅[Using JHipster in production][] 了解更多详细信息。

### 创建War包

要将您的应用程序打包为 war 以便将其部署到应用程序服务器，请运行：

```
./mvnw package -Pprod,war clean verify
```

### JHipster Control Center

JHipster Control Center 可以帮助您管理和控制您的应用程序。 您可以使用以下命令启动本地控制中心服务器（可通过 http://localhost:7419 访问）：

```
docker compose -f src/main/docker/jhipster-control-center.yml up
```

## 测试

### 运行Spring Boot 测试

要启动应用程序的测试，请运行：

```
./mvnw verify
```

### Client tests

Unit tests are run by [Jest][]. They're located in [front/src/test/javascript/](front/src/test/javascript/) and can be run with:

```
./npmw test
```

## 其他

### 使用Sonar进行代码质量控制

Sonar用于分析代码质量。 您可以使用以下命令启动本地 Sonar 服务器（可通过 http://localhost:9001 访问）：

```
docker compose -f src/main/docker/sonar.yml up -d
```

Note: we have turned off forced authentication redirect for UI in [src/main/docker/sonar.yml](src/main/docker/sonar.yml) for out of the box experience while trying out SonarQube, for real use cases turn it back on.

You can run a Sonar analysis with using the [sonar-scanner](https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner) or by using the maven plugin.

Then, run a Sonar analysis:

```
./mvnw -Pprod clean verify sonar:sonar -Dsonar.login=admin -Dsonar.password=admin
```

If you need to re-run the Sonar phase, please be sure to specify at least the `initialize` phase since Sonar properties are loaded from the sonar-project.properties file.

```
./mvnw initialize sonar:sonar -Dsonar.login=admin -Dsonar.password=admin
```

Additionally, Instead of passing `sonar.password` and `sonar.login` as CLI arguments, these parameters can be configured from [sonar-project.properties](sonar-project.properties) as shown below:

```
sonar.login=admin
sonar.password=admin
```

For more information, refer to the [Code quality page][].

### Using Docker to simplify development (optional)

You can use Docker to improve your JHipster development experience. A number of docker-compose configuration are available in the [src/main/docker](src/main/docker) folder to launch required third party services.

For example, to start a mysql database in a docker container, run:

```
docker compose -f src/main/docker/mysql.yml up -d
```

To stop it and remove the container, run:

```
docker compose -f src/main/docker/mysql.yml down
```

You can also fully dockerize your application and all the services that it depends on.
To achieve this, first build a docker image of your app by running:

```
npm run java:docker
```

Or build a arm64 docker image when using an arm64 processor os like MacOS with M1 processor family running:

```
npm run java:docker:arm64
```

Then run:

```
docker compose -f src/main/docker/app.yml up -d
```

When running Docker Desktop on MacOS Big Sur or later, consider enabling experimental `Use the new Virtualization framework` for better processing performance ([disk access performance is worse](https://github.com/docker/roadmap/issues/7)).

For more information refer to [Using Docker and Docker-Compose][], this page also contains information on the docker-compose sub-generator (`jhipster docker-compose`), which is able to generate docker configurations for one or several JHipster applications.

## Continuous Integration (optional)

To configure CI for your project, run the ci-cd sub-generator (`jhipster ci-cd`), this will let you generate configuration files for a number of Continuous Integration systems. Consult the [Setting up Continuous Integration][] page for more information.

[BegCode最新文档]: https://www.begcode.com
[Node.js]: https://nodejs.org/
[NPM]: https://www.npmjs.com/
[Webpack]: https://webpack.github.io/
[BrowserSync]: https://www.browsersync.io/
[Jest]: https://facebook.github.io/jest/
[Leaflet]: https://leafletjs.com/
[DefinitelyTyped]: https://definitelytyped.org/
",0,1,1,MIT,0,0.0,0.0,0.0,0.0,0.0,1.0,2044.0
6tail/tyme4j,master,"# Tyme [![License](https://img.shields.io/badge/license-MIT-4EB1BA.svg?style=flat-square)](https://github.com/6tail/tyme4j/blob/master/LICENSE)

Tyme是一个非常强大的日历工具库，可以看作 [Lunar](https://6tail.cn/calendar/api.html ""https://6tail.cn/calendar/api.html"") 的升级版，拥有更优的设计和扩展性，支持公历和农历、星座、干支、生肖、节气、法定假日等。

### Maven

```xml
<dependency>
  <groupId>cn.6tail</groupId>
  <artifactId>tyme4j</artifactId>
  <version>1.1.7</version>
</dependency>
```

## 示例

    import com.tyme.solar.SolarDay;
     
    public class Sample {
      public static void main(String[] args) {
        SolarDay solarDay = SolarDay.fromYmd(1986, 5, 29);
         
        // 1986年5月29日
        System.out.println(solarDay);
         
        // 农历丙寅年四月廿一
        System.out.println(solarDay.getLunarDay());
      }
    }

## 文档

请移步至 [https://6tail.cn/tyme.html](https://6tail.cn/tyme.html ""https://6tail.cn/tyme.html"")

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=6tail/tyme4j&type=Date)](https://star-history.com/#6tail/tyme4j&Date)
",17,4,1,MIT,0,3.0,0.0,0.0,0.0,0.0,1.0,334.0
JAgentSphere/bytebuddy-agent-demo,main,"# Agent-Demo

使用 Byte Buddy 和 Gradle 构建一个最简单的 Java Agent

Java Agent 的入口类是 `com.jas.agent.Main`

```java
public class Main {
    public static void premain(String args, Instrumentation inst) {
        launch(args, inst);
    }

    public static void agentmain(String args, Instrumentation inst) {
        launch(args, inst);
    }

    private static void launch(String args, Instrumentation inst) {
        System.out.println(""hello java agent"");
    }
}
```

提供 AgentBuilder 最简化便利测试的配置项

```java
AgentBuilder agentBuilder = new AgentBuilder.Default()
        .ignore(ElementMatchers.none()) // 忽略空，即允许 hook 所有类
        .with(AgentBuilder.RedefinitionStrategy.REDEFINITION) // 开启类被加载后也允许进行字节码修改
        .with(AgentBuilder.Listener.StreamWriting.toSystemError().withErrorsOnly()) // 字节码修改失败打印错误信息到控制台
        .with(AgentBuilder.Listener.StreamWriting.toSystemOut().withTransformationsOnly()) // 字节码修改成功也输出到控制台
        .with(new DumpClassListener()); // 字节码修改成功把类信息给报错到 weaving/classes 目录下
```

## 编译

在项目目录下执行如下命令，会在 test 文件夹中生成 agent.jar 和 demo.jar

```shell

# linux or macos
./gradlew jar

# windows
gradlew.bat jar
```

## 启动 Java Agent

使用如下命令挂载 agent 启动 SpringBoot 程序，会打印 `hello java agent`

```shell
cd test && \
  java -javaagent:agent.jar -jar demo.jar
```",4,2,3,MIT,0,0.0,0.0,0.0,0.0,0.0,1.0,0.0
simasch/cqrs-meets-modern-java,main,"# CQRS Meets Modern Java

This project is used as an example for my
talk [CQRS meets modern Java](https://speakerdeck.com/simas/cqrs-meets-modern-java)

## Prerequisite: jOOQ Build

The CQRS project uses jOOQ and therefore the database model classes must be created with Maven.

Change into the cqrs directory and run:

    ./mvnw compile

## Running the applications

Both applications use Testcontainers support of Spring Boot. Run the TestCqrsApplication and the
TestTraditionalApplication in src/test

## Testing

The file requests.http contains the http test requests to test the endpoints.",0,0,2,,0,0.0,0.0,0.0,0.0,0.0,1.0,5.0
mt1006/mc-ar-mod,FABRIC-1.20.1,"### This mod (especially in its current state) is more of a proof of concept than actual optimization mod!
It has many issues and greatly reduces performance of main rendering thread (even when disabled),
so for comparing performance use instance without mod installed.

# About
**Asynchronous Reprojection** is a Minecraft mod that creates second rendering context to asynchronously reproject frames from main rendering thread with new camera rotation and player position.

It was inspired by Comrade Stinger's demo, which was also base for shader code:
https://www.youtube.com/watch?v=VvFyOFacljg

Known issues:
- Fabric version works only on Windows and Linux (I haven't tested it on macos). Forge version works only on Windows.
- Screenshots (F2) and world icons don't work - they're black.
- Minor visual glitches.
- Camera bobbing is disabled.
- ""Fabulous"" graphics doesn't change anything compared to ""Fancy"".
- Camera sometimes rotates itself when opening or closing GUI.
- Forge version crashes when trying to resize window during startup.
- It sometimes just crashes (for no particular reason).

CurseForge page: https://www.curseforge.com/minecraft/mc-mods/asynchronous-reprojection

Modrinth page: https://modrinth.com/mod/asynchronous-reprojection

# Examples

![](https://raw.githubusercontent.com/mt1006/mc-ar-mod/_common/screenshots/example1.png)

![](https://raw.githubusercontent.com/mt1006/mc-ar-mod/_common/screenshots/example2.png)

![](https://raw.githubusercontent.com/mt1006/mc-ar-mod/_common/screenshots/example3.png)
",1,5,3,LGPL-3.0,0,0.0,0.0,0.0,0.0,0.0,1.0,0.0
ArtformGames/BungeeAuthProxy,master,"```text
   ___                         ___       __  __   ___                   
  / _ )__ _____  ___ ____ ___ / _ |__ __/ /_/ /  / _ \_______ __ ____ __
 / _  / // / _ \/ _ `/ -_) -_) __ / // / __/ _ \/ ___/ __/ _ \\ \ / // /
/____/\_,_/_//_/\_, /\__/\__/_/ |_\_,_/\__/_//_/_/  /_/  \___/_\_\\_, / 
               /___/                                             /___/  
```

README LANGUAGES [ [**English**](README.md) | [中文](README_CN.md)  ]

![CodeSize](https://img.shields.io/github/languages/code-size/ArtformGames/BungeeAuthProxy)
[![Download](https://img.shields.io/github/downloads/ArtformGames/BungeeAuthProxy/total)](https://github.com/ArtformGames/BungeeAuthProxy/releases)
[![Java CI with Maven](https://github.com/ArtformGames/BungeeAuthProxy/actions/workflows/maven.yml/badge.svg?branch=master)](https://github.com/ArtformGames//actions/workflows/maven.yml)
![Support](https://img.shields.io/badge/Minecraft-Java%201.16--Latest-green)

# **BungeeAuthProxy**

Authentication proxy injector for BungeeCord servers,
which is trying to solve the problem of inability to access the MineCraft online session and auth service in some areas.

## Usage

**Before using this injector, make sure that your Java version is 11 or above.**

1. Download latest release from [here](https://github.com/ArtformGames/BungeeAuthProxy/releases) .
2. Put the jar file into the folder of your BungeeCord server (same path with server jar).
3. Add the `-javaagent:BungeeAuthProxy.jar[=<CONFIG-FILE-NAME>]` before `-jar <server-jar>.jar` to the start command of
   your BungeeCord server.
    - For example: `java -javaagent:BungeeAuthProxy.jar -jar BungeeCord.jar`
    - Using custom config file name: `java -javaagent:BungeeAuthProxy.jar=auth-proxy.yml -jar BungeeCord.jar`
4. Start your bungeecord server, and configured the proxy (Default is `auth.yml` in server folder).

## Configurations

Will be generated on the first boot up.

```yaml
debug: false

# MineCraft service settings
service:
  # Timeout duration for single request in milliseconds.
  time-out: 5000
  # Authentication url dns-cache expire duration in milliseconds
  # If this value ≤0, will disable dns-cache.
  dns-cache-expire: 60000

# Proxy server settings
proxy:
  # Proxy protocol, -1 = NO_PROXY ,0 = HTTP/HTTPS, 1 = SOCKS4, 2 = SOCKS5
  protocol: -1
  # Proxy host
  host: 127.0.0.1
  # Proxy port
  port: 7890
  # Proxy authentication settings
  auth:
    # Whether to enable proxy authentication
    enabled: false
    username: proxy-username
    password: proxy-password

advance:
   # Remove unused field after injection.
   # If any 'NoSuchFieldException' or 'IllegalAccessException' occurred, try to set this to false.
   remove-unused-field: true
```

## Open Source Licence

The source code of this project adopts the [GNU General Public License v3.0](https://opensource.org/licenses/GPL-3.0).

## Supports

This project is mainly developed by the [Artfrom Games](https://github.com/ArtformGames/) .

Many thanks to Jetbrains for kindly providing a license for us to work on this and other open-source projects.  
[![](https://resources.jetbrains.com/storage/products/company/brand/logos/jb_beam.svg)](https://www.jetbrains.com/?from=https://github.com/ArtformGames/BungeeAuthProxy)

",5,0,1,GPL-3.0,2,0.0,2.0,1.0,9.0,1.0,-2.55,0.0
seregamorph/spring-test-smart-context,master,"## Improving Spring Boot Test efficiency

### Problem statement
Spring test framework creates an application context according to test class configuration.
The context is cached and reused for all subsequent tests. If there is an existing context
with the same configuration, it will be reused. Otherwise, the new context will be created.
This is a very efficient and flexible approach, but it has a drawback: eventually this may
lead to out of memory errors if the number of unique configurations is too high and context
has a lot of heavyweight beans like TestContainers. In many cases simple static bean 
definition can help, but this project suggests another approach: reordering test classes
and eager context cleanup.

Consider a sample test suite of 8 classes that use 4 different configurations, classes that have the same configuration
are marked with the same colour:

<img src=""doc/sample-test-suite.png"" alt=""Sample test suite"" width=""700""/>

In a large test suites as well as in shared CI/CD environments with lots of test pipelines
working simultaneously this may eventually lead to out of memory errors
in Java process or Docker host.

### Proposed solution
It's recommended to use statically-defined TestContainers beans, optimize reusing same configuration between tests 
e.g. via common test super-classes.
But additionally this library makes two optimizations:
* test class execution is reordered to group tests with the same context configuration so they
can be executed sequentially
* the order of tests is known, so if current test class is last per current configuration, the spring context
will be automatically closed (it's called `Smart DirtiesContext`) and the beans will be disposed releasing resources

As a result, in a suite of single module there will always be not more than 1 active spring contexts:

<img src=""doc/reorder-and-smart-dirties-context.png"" alt=""Reordered suite with smart DirtiesContext"" width=""700""/>

This chart is done via calculating the number of active docker containers while executing a suite of 120 integration
test classes that actively uses TestContainers for databases (several datasources simultaneously) and other services:

<img src=""doc/active-docker-containers.png"" alt=""Number of active docker containers"" width=""700""/>

As shown on the chart, the suite just fails with OOM without the optimization.
As an advantage, the total test execution time will also become less, because resource consumption (especially memory)
will be reduced, hence tests are executed faster.

### References
This idea was submitted to the Spring Framework team as a feature request:
* https://github.com/spring-projects/spring-framework/issues/32289

Public presentation with AtomicJar (TestContainers creators):
* https://www.youtube.com/watch?v=_Vci_5nr8R0

### Limitations
At the moment only single thread test execution per module is supported. Parallel test execution is work in progress.
Also there can be problems with Jupiter
[Nested](https://junit.org/junit5/docs/current/user-guide/#writing-tests-nested) test classes if they declare
own `@ContextConfiguration` or `@Import` of spring beans.

### Supported versions
`Java` 8+ (`Java` 17+ for spring-boot 3.x projects)

`Spring Boot` 2.4+, 3.x as well as bare Spring framework

Supported test frameworks:
* `JUnit 4` (via JUnit 5 [junit-vintage-engine](https://junit.org/junit5/docs/current/user-guide/#migrating-from-junit4-running))
* `JUnit 5 Jupiter`
* `TestNG` (both bare TestNG and JUnit platform [testng-engine](https://github.com/junit-team/testng-engine))

`Develocity Maven Extension` (test execution caching) correctly supports changed behaviour

### How to use
Add maven dependency (available in maven central):
```xml
<dependency>
    <groupId>com.github.seregamorph</groupId>
    <artifactId>spring-test-smart-context</artifactId>
    <version>0.8</version>
    <scope>test</scope>
</dependency>
```
Or Gradle dependency:
```groovy
testImplementation(""com.github.seregamorph:spring-test-smart-context:0.8"")
```
Also it's recommended to configure `""INFO""` level for `com.github.seregamorph.testsmartcontext` logger.
It's recommended to check [Demo projects](demo).

### How it works

<details>
  <summary>JUnit 5 Jupiter</summary>

Add the dependency to the library in test scope, it will automatically setup
[SmartDirtiesClassOrderer](spring-test-smart-context/src/main/java/com/github/seregamorph/testsmartcontext/jupiter/SmartDirtiesClassOrderer.java)
which will reorder test classes on each execution and prepare the list of last test class per context configuration.
Then this test execution listener
[SmartDirtiesContextTestExecutionListener](spring-test-smart-context/src/main/java/com/github/seregamorph/testsmartcontext/SmartDirtiesContextTestExecutionListener.java)
will be auto-discovered via [spring.factories](spring-test-smart-context/src/main/resources/META-INF/spring.factories).
Alternatively it can be defined explicitly
```java
@TestExecutionListeners(SmartDirtiesContextTestExecutionListener.class)
```
or even inherited from
[AbstractJUnitSpringIntegrationTest](spring-test-smart-context/src/main/java/com/github/seregamorph/testsmartcontext/jupiter/AbstractJUnitSpringIntegrationTest.java)
</details>

<details>
  <summary>TestNG</summary>

Add the dependency to the library in test scope, it will automatically setup
[SmartDirtiesSuiteListener](spring-test-smart-context/src/main/java/com/github/seregamorph/testsmartcontext/testng/SmartDirtiesSuiteListener.java)
which will reorder test classes on each execution and prepare the list of last test class per context configuration.
The integration test classes should add
[SmartDirtiesContextTestExecutionListener](spring-test-smart-context/src/main/java/com/github/seregamorph/testsmartcontext/SmartDirtiesContextTestExecutionListener.java)
```java
@TestExecutionListeners(SmartDirtiesContextTestExecutionListener.class)
```
Note: the annotation is inherited, so it makes sense to annotate the base test class or use
[AbstractTestNGSpringIntegrationTest](spring-test-smart-context/src/main/java/com/github/seregamorph/testsmartcontext/testng/AbstractTestNGSpringIntegrationTest.java)
parent.
</details>

<details>
  <summary>JUnit 4</summary>

Note: support of JUnit 4 is planned to be removed in version 1.0 (will stay available in 0.x versions).

The JUnit 4 does not provide standard way to reorder test class execution, but it's still possible via
[junit-vintage-engine](https://junit.org/junit5/docs/current/user-guide/#migrating-from-junit4-running).
This dependency should be added to test scope of the module:
```xml
<dependency>
    <groupId>org.junit.vintage</groupId>
    <artifactId>junit-vintage-engine</artifactId>
    <scope>test</scope>
</dependency>
```
or for Gradle (see [detailed instruction](https://docs.gradle.org/current/userguide/java_testing.html#executing_legacy_tests_with_junit_vintage)):
```groovy
testRuntimeOnly('org.junit.vintage:junit-vintage-engine')
testRuntimeOnly('org.junit.platform:junit-platform-launcher')
```
Also the `surefire`/`failsafe` plugins should be configured to use junit-platform:
```xml
<plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-surefire-plugin</artifactId>
    <version>${maven-surefire.version}</version>
    <dependencies>
        <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-junit-platform</artifactId>
            <version>${maven-surefire.version}</version>
        </dependency>
    </dependencies>
</plugin>
<plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-failsafe-plugin</artifactId>
    <version>${maven-surefire.version}</version>
    <dependencies>
        <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-junit-platform</artifactId>
            <version>${maven-surefire.version}</version>
        </dependency>
    </dependencies>
</plugin>
```
or for Gradle:
```groovy
tasks.named('test', Test) {
    useJUnitPlatform()
}
```

For projects with JUnit 4 it will automatically setup
[SmartDirtiesPostDiscoveryFilter](spring-test-smart-context/src/main/java/com/github/seregamorph/testsmartcontext/SmartDirtiesPostDiscoveryFilter.java)
which will reorder test classes on the level of junit-launcher and prepare the list of last test class per context configuration.
Then this test execution listener
[SmartDirtiesContextTestExecutionListener](spring-test-smart-context/src/main/java/com/github/seregamorph/testsmartcontext/SmartDirtiesContextTestExecutionListener.java)
will be auto-discovered via [spring.factories](spring-test-smart-context/src/main/resources/META-INF/spring.factories).
Alternatively it can be defined explicitly
```java
@TestExecutionListeners(SmartDirtiesContextTestExecutionListener.class)
```
or even inherited from
[AbstractJUnit4SpringIntegrationTest](spring-test-smart-context/src/main/java/com/github/seregamorph/testsmartcontext/junit4/AbstractJUnit4SpringIntegrationTest.java)
</details>

### Additional materials
* See the online presentation of the project https://www.youtube.com/watch?v=_Vci_5nr8R0 hosted by 
[AtomicJar](https://www.atomicjar.com/), the creators of [TestContainers](https://testcontainers.com/) framework.
* Presentation slides: [Miro board](https://miro.com/app/board/uXjVN3KJeCI=/?share_link_id=309027962805)

### Known projects using library
<img src=""doc/miro-logo.png"" alt=""Miro"" width=""120""/>

[Miro](https://miro.com/) is using this approach to optimize huge integration test suites and it saved a lot of resource
for CI/CD pipelines.
",8,0,3,Apache-2.0,0,13.0,0.0,0.0,0.0,0.0,1.0,81.0
